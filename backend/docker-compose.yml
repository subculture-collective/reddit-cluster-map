services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      web:
        aliases:
          - reddit-api
    env_file:
      - .env
    volumes:
      # Mount backups volume read-only to expose via HTTP endpoints
      - pgbackups:/app/backups:ro
    healthcheck:
      # Use jq to properly validate JSON structure instead of grep for '[' character
      # This ensures we get valid JSON with the expected status field, not just any response containing '['
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8000/health | jq -e '.status == \"ok\"' > /dev/null"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  crawler:
    build:
      context: .
      dockerfile: Dockerfile.crawler
    depends_on:
      - db
    networks:
      - web
    env_file:
      - .env

  db:
    image: postgres:17
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - PGDATA=/var/lib/postgresql/pgdata-volume
    volumes:
      # Mount the named volume at an alternate path to avoid overlay mount issues
      - postgres_data:/var/lib/postgresql/pgdata-volume
      # Mount only the base schema to ensure correct init order
      - ./migrations/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    networks:
      - web
    env_file:
      - .env
    command: postgres -c fsync=on -c synchronous_commit=on -c full_page_writes=on -c wal_level=replica

  precalculate:
    build:
      context: .
      dockerfile: Dockerfile.precalculate
    command: >
      sh -c "
      while :; do
          # Run precalculation
          /app/precalculate || echo 'Precalculation failed at $(date)'
          
          # Run database backup
          /app/scripts/backup.sh || echo 'Backup failed at $(date)'
          
          # Sleep for an hour
          sleep 3600
      done"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - web
    volumes:
      - ./scripts:/app/scripts
      # Persist backups on a named docker volume rather than a bind mount
      - pgbackups:/app/backups

  backup:
    build:
      context: .
      dockerfile: Dockerfile.precalculate
    command: ["/bin/sh", "-lc", "/app/scripts/backup-runner.sh"]
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - BACKUP_INTERVAL=24h
    networks:
      - web
    volumes:
      - ./scripts:/app/scripts:ro
      - pgbackups:/app/backups

  reddit_frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    networks:
      web:
        aliases:
          - reddit_frontend
    env_file:
      - .env

volumes:
  postgres_data:
  pgbackups:

networks:
  web:
    external: true
