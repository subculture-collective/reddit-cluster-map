// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: admin.sql

package db

import (
	"context"
)

const getServiceSetting = `-- name: GetServiceSetting :one
SELECT value FROM service_settings WHERE key = $1
`

func (q *Queries) GetServiceSetting(ctx context.Context, key string) (string, error) {
	row := q.db.QueryRowContext(ctx, getServiceSetting, key)
	var value string
	err := row.Scan(&value)
	return value, err
}

const upsertServiceSetting = `-- name: UpsertServiceSetting :exec
INSERT INTO service_settings(key, value)
VALUES($1, $2)
ON CONFLICT (key) DO UPDATE SET value = EXCLUDED.value
`

type UpsertServiceSettingParams struct {
	Key   string
	Value string
}

func (q *Queries) UpsertServiceSetting(ctx context.Context, arg UpsertServiceSettingParams) error {
	_, err := q.db.ExecContext(ctx, upsertServiceSetting, arg.Key, arg.Value)
	return err
}
