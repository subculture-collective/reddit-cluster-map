#!/usr/bin/env bash
# Pre-commit hook for formatting and type checking
# Installed via scripts/install-hooks.sh

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "Running pre-commit checks..."

# Track if any check fails
FAILED=0

# Get the root of the git repository
REPO_ROOT=$(git rev-parse --show-toplevel)

# Check if there are any Go files staged
GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$' || true)

if [ -n "$GO_FILES" ]; then
    echo ""
    echo "📝 Checking Go files..."
    
    # Run gofmt check
    echo -n "  - Running gofmt... "
    cd "$REPO_ROOT/backend"
    UNFORMATTED=""
    while IFS= read -r file; do
        # Only check files that exist (in case of deleted files staged for removal)
        if [ -f "$file" ]; then
            fmt_out=$(gofmt -l "$file" 2>/dev/null || true)
            if [ -n "$fmt_out" ]; then
                UNFORMATTED="${UNFORMATTED}${fmt_out}"$'\n'
            fi
        fi
    done <<< "$GO_FILES"
    if [ -n "$UNFORMATTED" ]; then
        echo -e "${RED}✗${NC}"
        echo -e "${RED}The following files need formatting:${NC}"
        echo "$UNFORMATTED" | sed 's/^/    /'
        echo ""
        echo "Run 'cd backend && make fmt' to fix formatting"
        FAILED=1
    else
        echo -e "${GREEN}✓${NC}"
    fi
    
    # Run go vet
    echo -n "  - Running go vet... "
    if go vet ./... 2>&1 | grep -q '^'; then
        echo -e "${RED}✗${NC}"
        echo -e "${RED}go vet found issues:${NC}"
        go vet ./... 2>&1 | sed 's/^/    /'
        FAILED=1
    else
        echo -e "${GREEN}✓${NC}"
    fi
fi

# Check if there are any TypeScript/JavaScript files staged
TS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$' || true)

if [ -n "$TS_FILES" ]; then
    echo ""
    echo "📝 Checking TypeScript/JavaScript files..."
    
    cd "$REPO_ROOT/frontend"
    
    # Check if node_modules exists
    if [ ! -d "node_modules" ]; then
        echo -e "${YELLOW}⚠ node_modules not found. Run 'cd frontend && npm ci' first${NC}"
    else
        # Run ESLint
        echo -n "  - Running ESLint... "
        if npm run lint -- --max-warnings=0 > /dev/null 2>&1; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${RED}✗${NC}"
            echo -e "${RED}ESLint found issues:${NC}"
            npm run lint 2>&1 | tail -20 | sed 's/^/    /'
            echo ""
            echo "Fix issues or run 'cd frontend && npm run lint' for details"
            FAILED=1
        fi
        
        # Run TypeScript type check
        echo -n "  - Running TypeScript check... "
        if npx tsc --noEmit > /dev/null 2>&1; then
            echo -e "${GREEN}✓${NC}"
        else
            echo -e "${RED}✗${NC}"
            echo -e "${RED}TypeScript type errors:${NC}"
            npx tsc --noEmit 2>&1 | tail -20 | sed 's/^/    /'
            echo ""
            echo "Fix type errors before committing"
            FAILED=1
        fi
    fi
fi

echo ""

if [ $FAILED -eq 1 ]; then
    echo -e "${RED}✗ Pre-commit checks failed${NC}"
    echo "Fix the issues above before committing"
    exit 1
else
    echo -e "${GREEN}✓ All pre-commit checks passed${NC}"
    exit 0
fi
